@{
    AdminUser user = SessionHelper.Admin.GetSession<AdminUser>();
    AdminNavigationHelper helper = new AdminNavigationHelper();
    List<Navigation> navList = helper.GetList(SiteType.Admin, user.GroupId, NavigationType.Page);
    Navigation currentNavigation = navList.FirstOrDefault(o => o.RequestUrl.ToLower() == HttpContext.Current.Request.RawUrl.ToLower());

    if (currentNavigation == null)
    {
        string strFirstUrl = helper.GetFirstPageUrl(navList) ?? "/Admin";
        Response.Redirect(strFirstUrl);
        return;
    }

    List<ButtonDto> buttonDtoList = helper.GetButtonList(SiteType.Admin, user.GroupId, currentNavigation.Id);

    List<Navigation> mainNavList = navList.Where(o => o.ParentId == 0).OrderBy(o => o.OrderIndex).ToList();
    List<Navigation> childNavList = null;
}

<el-menu default-active="@(HttpContext.Current.Request.RawUrl)"
         class="my-el-menu-vertical"
         @@select="handleSelect"
         background-color="#666666"
         text-color="#fff"
         active-text-color="#14b0bf">
    @foreach (Navigation mainNav in mainNavList)
    {
        childNavList = navList.Where(o => o.ParentId == mainNav.Id).OrderBy(o => o.OrderIndex).ToList();
        <el-submenu index="@(mainNav.Id)">
            <template slot="title">
                <i class="el-icon-menu"></i>
                <span slot="title">@(mainNav.Name)</span>
            </template>
            @foreach (Navigation childNav in childNavList)
            {
                <el-menu-item index="@childNav.RequestUrl">@(childNav.Name)</el-menu-item>
            }
        </el-submenu>
    }
</el-menu>

<script>
    function getButtonRules() {
        return @Html.Raw(SerializationHelper.ToJson(buttonDtoList));
    }
</script>